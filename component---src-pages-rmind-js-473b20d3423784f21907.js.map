{"version":3,"file":"component---src-pages-rmind-js-473b20d3423784f21907.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/rmind.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './rmind.scss';\nimport Helmet from 'react-helmet';\nimport { Link } from 'gatsby';\n\nconst RmindPage = () => {\n  const [code, setCode] = useState('');\n  const [numReminders, setNumReminders] = useState(0);\n  const [reminderList, setReminderList] = useState([]);\n\n  const FINAL_CODE = `$ rmind clean crontab in 1 month\n<span class=\"console__check\">✔︎</span> I'll remind you to \"clean crontab” (Sunday Jun 21st at 12:00 PM)\n\n$ rmind email Sarah in 40 mins\n<span class=\"console__check\">✔︎</span> I'll remind you to \"email Sarah\" (Today at 11:51 AM)\n\n$ rmind call mom tonight\n<span class=\"console__check\">✔︎</span> I'll remind you to \"call mom\" (Tonight at 10:00 PM)`;\n\n  const FINAL_REMINDERS = [\n    {\n      message: 'Clean up crontab',\n      date: '21/05/2020, 12:00 PM'\n    },\n    {\n      message: 'Email Sarah',\n      date: 'Today, 11:51 AM'\n    },\n    {\n      message: 'Call mom',\n      date: 'Today, 10:00 PM'\n    }\n  ];\n\n  useEffect(() => {\n    const isSSR = typeof window === 'undefined';\n    if (isSSR) return;\n\n    const lines = FINAL_CODE.split('\\n');\n    async function printLines() {\n      for (const line of lines) {\n        let timeout = /^\\$/g.test(line) ? 50 : 5;\n        await printLine(line, timeout);\n        if (/^</g.test(line)) {\n          setNumReminders(num => num + 1);\n          setReminderList(reminders => {\n            const len = reminders.length;\n            return [...reminders, FINAL_REMINDERS[len]];\n          });\n        } else {\n          await wait(1500);\n        }\n        setCode(code => code + '\\n');\n      }\n    }\n    printLines();\n  }, [FINAL_CODE]);\n\n  async function printLine(line, timeout) {\n    return new Promise(resolve => {\n      let idx = 0;\n      const interval = setInterval(() => {\n        if (idx < line.length) {\n          setCode(code => code + line[idx++]);\n        } else {\n          clearInterval(interval);\n          resolve();\n        }\n      }, timeout);\n    });\n  }\n\n  async function wait(ms) {\n    return new Promise(resolve => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  const title = 'rmind: A minimalist CLI for the macOS Reminders app';\n  const description =\n    'rmind is a CLI that lets you add macOS reminders from the terminal using natural language';\n\n  return (\n    <>\n      <Helmet\n        htmlAttributes={{\n          lang: 'en'\n        }}\n        title={title}\n        titleTemplate={`%s`}\n        meta={[\n          {\n            name: `description`,\n            content: description\n          },\n          {\n            property: `og:title`,\n            content: title\n          },\n          {\n            property: `og:description`,\n            content: description\n          },\n          {\n            property: `og:type`,\n            content: `website`\n          },\n          {\n            property: `og:image`,\n            content: 'http://carlos-temp-public.s3.amazonaws.com/rmindog.jpg'\n          },\n          {\n            property: `og:image:secure_url`,\n            content: 'https://carlos-temp-public.s3.amazonaws.com/rmindog.jpg'\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`\n          },\n          {\n            name: `twitter:creator`,\n            content: '@caroso1222'\n          },\n          {\n            name: `twitter:title`,\n            content: title\n          },\n          {\n            name: `twitter:description`,\n            content: description\n          }\n        ]}\n      />\n      <div className=\"rmind\">\n        <div className=\"container container--rmind p-relative\">\n          <h1 className=\"rmind__header\">rmind</h1>\n          <h2 className=\"rmind__subheader\">A minimalist CLI for the macOS Reminders app</h2>\n          <div className=\"row\">\n            <div className=\"col-sm-8\">\n              <div className=\"console\">\n                <div className=\"console__header\">\n                  <div className=\"window-buttons\">\n                    <div className=\"window-buttons__button window-buttons__button--red\"></div>\n                    <div className=\"window-buttons__button window-buttons__button--yellow\"></div>\n                    <div className=\"window-buttons__button window-buttons__button--green\"></div>\n                  </div>\n                </div>\n                <div className=\"console__body\">\n                  <pre className=\"console__code rmind-code\" dangerouslySetInnerHTML={{ __html: code }}></pre>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-sm-4\">\n              <div className=\"reminders\">\n                <div className=\"reminders__header\">\n                  <div className=\"window-buttons\">\n                    <div className=\"window-buttons__button window-buttons__button--red\"></div>\n                    <div className=\"window-buttons__button window-buttons__button--yellow\"></div>\n                    <div className=\"window-buttons__button window-buttons__button--green\"></div>\n                  </div>\n                </div>\n                <div className=\"reminders__body as-header\">\n                  <div className=\"reminders__upper d-flex justify-content-between\">\n                    <p>Reminders</p>\n                    <p>{numReminders}</p>\n                  </div>\n                  {reminderList.map((reminder, idx) => {\n                    return (\n                      <div className=\"reminder d-flex\" key={idx}>\n                        <div className=\"reminder__left\">\n                          <div className=\"reminder__checker\"></div>\n                        </div>\n                        <div className=\"reminder__right\">\n                          <p className=\"reminder__message\">{reminder.message}</p>\n                          <p className=\"reminder__date\">{reminder.date}</p>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"rmind__links\">\n            <p className=\"rmind-code rmind-code--star\">\n              rmind <a href=\"https://github.com/caroso1222/rmind\">star rmind on GitHub</a> in 1 min\n            </p>\n            <Link className=\"rmind__credits as-header d-block\" to=\"/\">\n              Carlos Roso © 2022\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default RmindPage;\n"],"names":["RmindPage","code","setCode","useState","numReminders","setNumReminders","reminderList","setReminderList","FINAL_CODE","FINAL_REMINDERS","message","date","async","printLine","line","timeout","Promise","resolve","idx","interval","setInterval","length","clearInterval","wait","ms","setTimeout","useEffect","window","lines","split","test","num","reminders","len","concat","_toConsumableArray","printLines","title","description","React","Helmet","htmlAttributes","lang","titleTemplate","meta","name","content","property","className","dangerouslySetInnerHTML","__html","map","reminder","key","href","Link","to"],"sourceRoot":""}