{"componentChunkName":"component---src-templates-blog-post-js","path":"/how-to-run-multiple-curl-requests-sequentially/","result":{"data":{"markdownRemark":{"html":"<p>I came across this problem when trying to fetch the post title of the top HackerNews story. The HN API lets you grab the top stories IDs and the item’s information. To accomplish this feature, we’ll need to fire two sequential requests: first grab the top ID and then fetch that ID’s information.</p>\n<p>This can be done by understanding two concepts:</p>\n<ol>\n<li><code class=\"language-text\">curl</code> is not an async operation (unless appending a <code class=\"language-text\">&amp;</code>)</li>\n<li>String replacement: <code class=\"language-text\">${string/match/replacement}</code></li>\n</ol>\n<p>Let’s see what the code looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber 0\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function-name function\">show_top_hn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\"># 1st curl: fetch the top stories. Get the first element with jq. Store the result in 'post_id'.</span>\n  <span class=\"token assign-left variable\">post_id</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> https://hacker-news.firebaseio.com/v0/topstories.json?print<span class=\"token operator\">=</span>pretty <span class=\"token operator\">|</span> jq <span class=\"token string\">'.[0]'</span><span class=\"token variable\">)</span></span>\n\n  <span class=\"token comment\"># Create a placeholder for the string replacement. We'll replace 'item_id' with the real item ID later on.</span>\n  <span class=\"token assign-left variable\">item_request</span><span class=\"token operator\">=</span>https://hacker-news.firebaseio.com/v0/item/item_id.json?print<span class=\"token operator\">=</span>pretty\n\n  <span class=\"token comment\"># 2nd curl: fetch the top story's info. Use string replacement to plug the id into the 'item_request' string.</span>\n  <span class=\"token assign-left variable\">item_data</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token string\">\"<span class=\"token variable\">${item_request<span class=\"token operator\">/</span>item_id<span class=\"token operator\">/</span>$post_id}</span>\"</span><span class=\"token variable\">)</span></span>\n\n  <span class=\"token comment\"># Grab the title from the returned JSON</span>\n  <span class=\"token assign-left variable\">title</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $item_data <span class=\"token operator\">|</span> jq <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'.title'</span><span class=\"token variable\">)</span></span>\n\n  <span class=\"token comment\"># Grab the URL from the returned JSON</span>\n  <span class=\"token assign-left variable\">url</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> $item_data <span class=\"token operator\">|</span> jq <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'.url'</span><span class=\"token variable\">)</span></span>\n\n  <span class=\"token comment\"># Compose the final string</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$title</span>\"</span> <span class=\"token string\">\"->\"</span> <span class=\"token string\">\"<span class=\"token variable\">$url</span>\"</span>\n\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"divider\"></div>\n<p><strong>Note</strong>: The code snippet above uses <a href=\"https://stedolan.github.io/jq/\" target=\"_blank\" rel=\"nofollow\">jq</a> to parse the JSON response.</p>\n<p><strong>Fun fact</strong>: You can use this function to <a href=\"/pimp-your-bash-profile-with-aliases-and-functions\">see the top HackerNews article on every new terminal instance</a>.</p>","frontmatter":{"title":"How to run multiple curl requests sequentially","description":"In other words, how to pipe one curl's output to another curl request","meta":null,"date":"April 09, 2020"}}},"pageContext":{"slug":"/how-to-run-multiple-curl-requests-sequentially/","previous":{"fields":{"slug":"/quarantine/quarantine-day-20/"},"frontmatter":{"title":"Quarantine — Day 20"}},"next":{"fields":{"slug":"/quarantine/quarantine-day-21/"},"frontmatter":{"title":"Quarantine — Day 21"}}}},"staticQueryHashes":["3649515864","63159454"]}