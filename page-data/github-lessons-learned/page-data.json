{"componentChunkName":"component---src-templates-blog-post-js","path":"/github-lessons-learned/","result":{"data":{"markdownRemark":{"html":"<p>I’m not popular in Github but I have a <a href=\"https://github.com/caroso1222/notyf\" target=\"_blank\" rel=\"nofollow\">repo with 1.5K stars</a> and 1M hits/month. I got <a href=\"https://github.com/caroso1222\" target=\"_blank\" rel=\"nofollow\">some more</a> with a few hundred stars. Here’s what I’ve learned along the way.</p>\n<div class=\"divider\"></div>\n<h4>Build good looking demos</h4>\n<p>This may come off as superficial but it’s worked wonders. I write frontend libraries where demos are critical for adoption. I put a lot of hours <a href=\"https://dribbble.com/shots/10867744-Notyf-JavaScript-Open-Source-Library\" target=\"_blank\" rel=\"nofollow\">designing</a> and coding <a href=\"https://ng-popups.carlosroso.com/\" target=\"_blank\" rel=\"nofollow\">good</a> <a href=\"https://carlosroso.com/rmind/\" target=\"_blank\" rel=\"nofollow\">looking</a> <a href=\"https://carlosroso.com/rmind/\" target=\"_blank\" rel=\"nofollow\">demos</a>.</p>\n<h4>It’s fine to be inconsistent</h4>\n<p>I used to <a href=\"https://github.com/caroso1222/notyf/issues/21\" target=\"_blank\" rel=\"nofollow\">beat myself</a> for being inconsistent. Not anymore. Github is <a href=\"https://github.com/logo-quiz/logo-quiz\" target=\"_blank\" rel=\"nofollow\">my lab</a>, not my job. I make sure to have a stable, working version on master and move on. I come back once <a href=\"https://github.com/caroso1222/notyf/graphs/contributors\" target=\"_blank\" rel=\"nofollow\">motivation strikes again</a>. I play it long term.</p>\n<h4>Build framework-agnostic libraries</h4>\n<p>Building <a href=\"https://github.com/caroso1222/ng-lib-schematics\" target=\"_blank\" rel=\"nofollow\">libraries for frameworks</a> is fun and it has its niche. But, if you want to have more impact, architect your libraries to be <a href=\"https://github.com/caroso1222/notyf\" target=\"_blank\" rel=\"nofollow\">framework-agnostic</a> and easy to plug anywhere (see next point).</p>\n<h4>Write framework-specific recipes</h4>\n<p>Whether you do backend, frontend, ML, or whatever, chances are your users are using frameworks. <a href=\"https://github.com/caroso1222/notyf/tree/master/recipes\" target=\"_blank\" rel=\"nofollow\">Write easy-to-follow recipes</a> for how to plug your library into any of these abstractions. It’ll boost adoption.</p>\n<h4>Have a clear scope</h4>\n<p>Devs complain about clients asking too much yet we do the same on Github. You’ll get a myriad of feature requests if your OSS project takes off. Communicate your scope. Learn to <a href=\"https://github.com/caroso1222/ng-lib-schematics/pull/7\" target=\"_blank\" rel=\"nofollow\">oblige</a>. Learn to <a href=\"https://github.com/caroso1222/notyf/issues/72\" target=\"_blank\" rel=\"nofollow\">decline</a>.</p>\n<h4>Relaunch</h4>\n<p>I’m not a marketer so launching is always a gamble. What I’ve learned, though, is you must relaunch. People might have not seen your stuff the first time. Release a new version and <a href=\"https://medium.com/hackernoon/the-last-toast-library-youll-ever-need-8629e61b8e91\" target=\"_blank\" rel=\"nofollow\">write a blog post</a>. <a href=\"https://twitter.com/caroso1222/status/1282781759105531909\" target=\"_blank\" rel=\"nofollow\">Tweet about it</a>.</p>\n<h4>Sneak in to understand usage</h4>\n<p>Use the Github’s <a href=\"https://github.com/caroso1222/notyf/network/dependents?package_id=UGFja2FnZS0xNDQ5NDI5Nw%3D%3D\" target=\"_blank\" rel=\"nofollow\">Dependency Graph</a> to see who’s using your packages (lots of <a href=\"https://docs.github.com/en/github/visualizing-repository-data-with-graphs/about-the-dependency-graph#supported-package-ecosystems\" target=\"_blank\" rel=\"nofollow\">supported ecosystems</a>). Then visit your users’ repos and analyze usage. Are they hacking it to fix a hidden bug? can you improve the API?</p>\n<h4>Use badges but don’t oversell</h4>\n<p><a href=\"https://cmustrudel.github.io/papers/icse18badges.pdf\" target=\"_blank\" rel=\"nofollow\">Scientific research has shown</a> that badges are positive signals for contributors and users. Adding a badge doesn’t change popularity but popular projects are more likely to have badges. Use <a href=\"https://cmustrudel.github.io/projects/badges/\" target=\"_blank\" rel=\"nofollow\">assessment badges</a>.</p>\n<h4>Use a GIF</h4>\n<p>You have just a few seconds to convince users to try your library. Put a GIF at the top of your README to help them quickly jump in. You can use <a href=\"https://asciinema.org/\" target=\"_blank\" rel=\"nofollow\">terminal screencasts</a>, <a href=\"https://github.com/caroso1222/amazon-autocomplete/blob/master/README.md\" target=\"_blank\" rel=\"nofollow\">GIF recordings</a> or <a href=\"https://github.com/sindresorhus/Gifski#screenshots\" target=\"_blank\" rel=\"nofollow\">screenshot sequences</a>.</p>\n<h4>Yes, build it again</h4>\n<p>Unless you’re a seasoned OSS developer, you need to build <em>yet another version</em> of popular things. This will ignite your curiosity to try bolder things later. Don’t try to code <em>the next big thing</em>. Just build something. Today.</p>\n<h4>Redifine success</h4>\n<p>I have <a href=\"https://github.com/caroso1222/rmind\" target=\"_blank\" rel=\"nofollow\">unpopular</a> <a href=\"https://github.com/caroso1222/node-reminders\" target=\"_blank\" rel=\"nofollow\">projects</a> with little to no installs. I’m proud of them, though. I learned a lot from building them. I use them myself. I’m getting better and enjoying my projects. That’s my ultimate bar for success.</p>\n<h4>Be aware of moniker naming rules</h4>\n<p>Not sure about other ecosystems but NPM has <a href=\"https://blog.npmjs.org/post/168978377570/new-package-moniker-rules?\" target=\"_blank\" rel=\"nofollow\">moniker rules</a> for package naming. I learned it the <a href=\"https://carlosroso.com/how-to-check-npm-package-availability/\" target=\"_blank\" rel=\"nofollow\">hard way</a>. Pick a good name and make sure you can work with it. Only then start coding.</p>\n<div class=\"divider\"></div>\n<p>This is a personal journal for things that have worked in my open source work. I’ll keep updating this as I come up with new findings.</p>\n<p>Do you have any advice to build good OSS projects? <a href=\"/contact\">Let me know!</a></p>","frontmatter":{"title":"Lessons learned doing open source","description":"An introspection on my OSS work","meta":null,"date":"July 16, 2020"}}},"pageContext":{"slug":"/github-lessons-learned/","previous":{"fields":{"slug":"/faq-for-future-toptalers/"},"frontmatter":{"title":"FAQs for future Toptalers"}},"next":{"fields":{"slug":"/how-to-deploy-a-monorepo-in-vercel/"},"frontmatter":{"title":"How to deploy a monorepo in Vercel"}}}},"staticQueryHashes":["3649515864","63159454"]}